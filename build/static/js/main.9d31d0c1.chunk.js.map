{"version":3,"sources":["components/ContentWrapper/PhotosList/PhotoView/photoView.module.sass","components/ContentWrapper/AlbumsList/AlbumItem/albumItem.module.sass","components/Header/Select/select.module.sass","components/Header/header.module.sass","components/ContentWrapper/PhotosList/photosList.module.sass","components/ContentWrapper/PhotosList/PhotoItem/photoItem.module.sass","components/Header/Select/Select.js","components/Header/Header.js","components/ContentWrapper/PhotosList/PhotoView/PhotoView.js","components/ContentWrapper/PhotosList/PhotoItem/PhotoItem.js","components/ContentWrapper/PhotosList/PhotosList.js","components/ContentWrapper/AlbumsList/AlbumItem/AlbumItem.js","components/ContentWrapper/AlbumsList/AlbumsList.js","components/ContentWrapper/ContentWrapper.js","DataHandler.js","components/App.js","index.js","components/ContentWrapper/contentWrapper.module.sass"],"names":["module","exports","Select","list","selectedElementIndex","onElementClick","getLink","useState","isOpen","setIsOpen","className","styles","select","onClick","select__header","name","size","select__mobile_header","select__list","map","element","index","select__item","to","id","generateLink","userId","Header","userList","selectedUserIndex","onChangeUser","wrapper","header","title","PhotoView","photo","handlers","modalPage","modalWrapper","close","control","prev","src","alt","next","PhotoItem","thumbnailUrl","info","PhotosList","albums","albumId","useParams","album","useMemo","find","String","photos","history","useHistory","selectedPhoto","setSelectedPhoto","updatePhoto","url","wrapperStyle","content","back","goBack","backText","elements","length","undefined","len","AlbumItem","cover","count","style","text","AlbumsList","user","ContentWrapper","albumsList","selectedUser","exact","path","DataHandler","fetch","then","response","json","result","join","filter","ph","App","users","setUsers","setSelectedUserIndex","setAlbums","selectedUserId","useEffect","getAlbumsData","getUsers","from","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d31d0c1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalPage\":\"photoView_modalPage__3y3w5\",\"modalWrapper\":\"photoView_modalWrapper__JBLv2\",\"close\":\"photoView_close__uY77n\",\"control\":\"photoView_control__1J5Vv\",\"control__left\":\"photoView_control__left__iYWxe\",\"control__right\":\"photoView_control__right__6NSsr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"album\":\"albumItem_album__3KaYa\",\"title\":\"albumItem_title__39AV0\",\"count\":\"albumItem_count__3utv_\",\"cover\":\"albumItem_cover__19R97\",\"text\":\"albumItem_text__2YJuJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"select_select__1AtO0\",\"select__header\":\"select_select__header__3mOtw\",\"select__mobile_header\":\"select_select__mobile_header__jdmt5\",\"select__list\":\"select_select__list__1iANR\",\"select__item\":\"select_select__item__2Rkv8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"header_wrapper__s2RXq\",\"header\":\"header_header__MyZlq\",\"title\":\"header_title__3RyWT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"photosList_header__2yX-Q\",\"back\":\"photosList_back__1hisr\",\"backText\":\"photosList_backText__1w3VR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"photoItem_wrapper__3p3um\",\"info\":\"photoItem_info__1WkGk\"};","import React, { useState } from \"react\"\r\nimport styles from \"./select.module.sass\"\r\nimport { MdExpandMore, MdExpandLess } from \"react-icons/md\"\r\nimport { FaUser } from \"react-icons/fa\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nfunction Select ({ list, selectedElementIndex, onElementClick, getLink }) {\r\n    // рендер блока выпадающего списка только в случае, если isOpen === true\r\n    const [isOpen, setIsOpen] = useState(false)\r\n\r\n    return (\r\n        <div className={styles.select} onClick={() => setIsOpen(!isOpen)}>\r\n            <div className={styles.select__header}>\r\n                <span>{list[selectedElementIndex]?.name}</span>\r\n                {\r\n                    isOpen\r\n                        ? <MdExpandLess size='1.2em'/>\r\n                        : <MdExpandMore size='1.2em'/>\r\n                }\r\n            </div>\r\n            { /*минимизированный вид шапки селекта на мобильных устройствах (и др с width < 481px)*/ }\r\n            <div className={styles.select__mobile_header}>\r\n                < FaUser />\r\n            </div>\r\n            {\r\n                isOpen &&\r\n                <div className={styles.select__list}>\r\n                    {\r\n                        //генерация выпадающего списка всех пользователей без выбранного с ссылками на соответствующие страницы\r\n                        list.map((element, index) => index !== selectedElementIndex &&\r\n                            <div\r\n                                className={styles.select__item}\r\n                                key={element.id}\r\n                                onClick={() => onElementClick(index)}\r\n                            >\r\n                                <Link to={getLink(element.id)}>\r\n                                    {element.name}\r\n                                </Link>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Select\r\n","import React from \"react\"\r\nimport Select from \"./Select/Select\"\r\nimport styles from \"./header.module.sass\"\r\n\r\n//формирование ссылок для линков селекта; вынесено, чтоб сделать компонент селект независимыс и переиспользуемым\r\nconst generateLink = userId => `/user/${userId}`\r\n\r\nfunction Header ({ userList, selectedUserIndex, onChangeUser }) {\r\n    return (\r\n        <header className={styles.wrapper}>\r\n            <div className={styles.header}>\r\n                <div className={styles.title}>\r\n                    Photo gallery\r\n                </div>\r\n                <Select\r\n                    list={userList}\r\n                    selectedElementIndex={selectedUserIndex}\r\n                    onElementClick={onChangeUser}\r\n                    getLink={generateLink}\r\n                />\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from \"react\"\r\nimport styles from \"./photoView.module.sass\"\r\nimport { IoChevronBack, IoChevronForward, IoClose } from \"react-icons/io5\"\r\n\r\nfunction PhotoView({ photo, ...handlers }) {\r\n\r\n    return (\r\n        <div className={styles.modalPage}>\r\n            <div className={styles.modalWrapper}>\r\n                <h1 className={styles.close} onClick={handlers.close}><IoClose/></h1>\r\n                <div className={`${styles.control} ${styles['control__left']}`} onClick={handlers.prev}>\r\n                    <IoChevronBack size=\"1.3rem\"/>\r\n                </div>\r\n                <img src={photo} alt={photo} />\r\n                <div className={`${styles.control} ${styles['control__right']}`} onClick={handlers.next}>\r\n                    <IoChevronForward size=\"1.3rem\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n)\r\n}\r\n\r\nexport default PhotoView\r\n","import React from \"react\"\r\nimport styles from \"./photoItem.module.sass\"\r\n\r\nfunction PhotoItem({ title, thumbnailUrl, onClick }) {\r\n    // для отображения фото в списке фото используется маленькое изображение: thumbnailUrl\r\n    // для отображения фото при его просмотре используется большое изображение: url\r\n    return (\r\n        <div className={styles.wrapper} onClick={onClick}>\r\n            <img src={thumbnailUrl} alt={title} />\r\n            <div className={styles.info}>\r\n                {title}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PhotoItem\r\n","import React, { Fragment, useState, useMemo } from \"react\"\r\nimport { useParams, useHistory } from \"react-router-dom\"\r\nimport PhotoView from \"./PhotoView/PhotoView\"\r\nimport PhotoItem from \"./PhotoItem/PhotoItem\"\r\nimport wrapperStyle from \"../contentWrapper.module.sass\"\r\nimport styles from \"./photosList.module.sass\"\r\nimport {HiOutlineArrowNarrowLeft} from \"react-icons/hi\"\r\n\r\n//расчёт индекса следующего фото при перелистывании при просмотре\r\nconst\r\n    getNextIndex = (index, len) => index === len - 1 ? 0 : index + 1,\r\n    getPrevIndex = (index, len) => index === 0 ? len - 1 : index - 1\r\n\r\nfunction PhotosList({ albums }) {\r\n\r\n    // albumId - параметр из ссылки на страницу, текущий альбом\r\n    const\r\n        { albumId } = useParams(),\r\n\r\n        // useMemo используется для оптимизации, пересчёт результата функции происходит только при изменении переменных albums или albumId,\r\n        // а не при каждом рендере\r\n        album = useMemo(\r\n            () => albums.find(album => String(album.id) === albumId),\r\n            [albums, albumId]),\r\n        photos = album ? album.photos : [],\r\n\r\n        // history для возможности возвращения на предыдущую страницу\r\n        history = useHistory(),\r\n        [selectedPhoto, setSelectedPhoto] = useState(),\r\n\r\n        //обновление фото по индексу в массиве\r\n        updatePhoto = index => setSelectedPhoto({\r\n            url: photos[index].url,\r\n            index,\r\n            name: photos[index].name\r\n        }),\r\n        getNextPhoto = () => updatePhoto(getNextIndex(selectedPhoto.index, photos.length)),\r\n        getPrevPhoto = () => updatePhoto(getPrevIndex(selectedPhoto.index, photos.length))\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className={wrapperStyle.wrapper}>\r\n                <div className={wrapperStyle.content}>\r\n                    <div className={`${wrapperStyle.header} ${styles.header}`}>\r\n                        <h2 className={styles.back} onClick={history.goBack}>\r\n                            <HiOutlineArrowNarrowLeft />\r\n                            <span className={styles.backText}>Back</span>\r\n                        </h2>\r\n                        <h1>\r\n                            {album?.title}\r\n                        </h1>\r\n                    </div>\r\n                    <div className={wrapperStyle.elements}>\r\n                        {\r\n                            // если фотографии не загружены, возвращение на предыдущую страницу\r\n                            // также если пользователем вручную был введён несуществующий номер альбома\r\n                            photos.length\r\n                                ? photos.map((photo, index) =>\r\n                                    <PhotoItem\r\n                                        onClick={() => updatePhoto(index)}\r\n                                        key={index}\r\n                                        {...photo}\r\n                                    />)\r\n                                : history.goBack()\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {\r\n                selectedPhoto &&\r\n                <PhotoView\r\n                    photo={selectedPhoto.url}\r\n                    close={() => setSelectedPhoto(undefined)}\r\n                    next={getNextPhoto}\r\n                    prev={getPrevPhoto}\r\n                />\r\n            }\r\n        </Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default PhotosList\r\n","import React from \"react\"\r\nimport \"./albumItem.module.sass\"\r\nimport style from \"./albumItem.module.sass\"\r\nimport { MdPhotoLibrary } from \"react-icons/md\"\r\n\r\nfunction AlbumItem({ title, cover, count }) {\r\n    // обложкой альбома передаётся последняя фотка внутри альбома в маленьком размере: thumbnailUrl\r\n    return (\r\n        <div className={style.album}>\r\n            <div className={style.cover}>\r\n                <img src={cover.thumbnailUrl} alt={title} />\r\n            </div>\r\n            <div className={style.text}>\r\n                <span className={style.title}>{title}</span>\r\n                <span className={style.count}>\r\n                    <MdPhotoLibrary />\r\n                    {count}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AlbumItem\r\n","import React from \"react\"\r\nimport AlbumItem from \"./AlbumItem/AlbumItem\"\r\nimport { Link, useParams } from \"react-router-dom\"\r\nimport wrapperStyle from \"../contentWrapper.module.sass\"\r\n\r\nfunction AlbumsList({ albums, user }) {\r\n    const { userId } = useParams()\r\n\r\n    return (\r\n        <div className={wrapperStyle.wrapper}>\r\n            <div className={wrapperStyle.content}>\r\n                <h1 className={wrapperStyle.header}>\r\n                    {`${user.name}'s albums`}\r\n                </h1>\r\n                <div className={wrapperStyle.elements}>\r\n                    {\r\n                        albums.map(album =>\r\n                            <Link to={`/users/${userId}/albums/${album.id}`} key={album.id}>\r\n                                <AlbumItem\r\n                                    title={album.title}\r\n                                    cover={album.photos[album.photos.length - 1]}\r\n                                    count={album.photos.length}\r\n                                />\r\n                            </Link>)\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default AlbumsList\r\n","import React from \"react\"\r\nimport { Switch, Route } from \"react-router-dom\"\r\nimport PhotosList from \"./PhotosList/PhotosList\"\r\nimport AlbumsList from \"./AlbumsList/AlbumsList\"\r\n\r\nfunction ContentWrapper({ albumsList, selectedUser }) {\r\n    return (\r\n\r\n        <Switch>\r\n            {/*локальный switch для управления контентом - содержимым блока ContentWrapper*/}\r\n            <Route exact path=\"/users/:userId\">\r\n                <AlbumsList\r\n                    albums={albumsList}\r\n                    user={selectedUser}\r\n                />\r\n            </Route>\r\n            <Route path=\"/users/:userId/albums/:albumId\">\r\n                <PhotosList albums={albumsList} />\r\n            </Route>\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default ContentWrapper\r\n","class DataHandler {\r\n\r\n    //getUsers () - выгрузка всех пользователей, фильтрация информации о пользователе: { id, name }\r\n    static getUsers () {\r\n        return fetch(`https://jsonplaceholder.typicode.com/users`)\r\n            .then(response => response.json())\r\n            .then(result => result.map(({id, name}) => ({id, name})))\r\n    }\r\n\r\n    //getAlbumsData(userId) - выгрузка альбомов по переданному id пользователя и фотографий по альбомам\r\n    //userId - id выбранного пользователя, expected type: string or number\r\n    // result - {albumInfo, photos: []}\r\n    static async getAlbumsData(userId) {\r\n        const albumsList = await fetch(`https://jsonplaceholder.typicode.com/albums?userId=${userId}`)\r\n            .then(response => response.json())\r\n        return fetch(`https://jsonplaceholder.typicode.com/photos?${\r\n                albumsList.map(album => `albumId=${album.id}`).join('&')\r\n            }`)\r\n            .then(response => response.json())\r\n            .then(result =>\r\n                albumsList.map(album => ({\r\n                    ...album,\r\n                    photos: result.filter(ph => ph.albumId === album.id)\r\n                }))\r\n            )\r\n\r\n    }\r\n}\r\n\r\nexport default DataHandler\r\n","import React, { useState, useEffect } from \"react\"\nimport { Switch, Route, Redirect } from \"react-router-dom\"\nimport Header from \"./Header/Header\"\nimport ContentWrapper from \"./ContentWrapper/ContentWrapper\"\nimport DataHandler from \"../DataHandler\"\n\nfunction App() {\n    const\n        [users, setUsers] = useState([]),\n        [selectedUserIndex, setSelectedUserIndex] = useState(0),\n        [albums, setAlbums] = useState([]),\n        //getUserData() - передача выгруженных данных об альбомах в albums state\n        getUserData = () =>\n            DataHandler.getAlbumsData(users[selectedUserIndex].id)\n                .then(result => {\n                    setAlbums(result)\n                }),\n        selectedUserId = users[selectedUserIndex]?.id\n\n    // выгрузка данных о текущем пользователе\n    useEffect(() => {\n        if (users.length > 0)\n            getUserData()\n    }, [users, selectedUserIndex])\n\n    // выгрузка всех пользователей\n    useEffect(() => {\n        DataHandler.getUsers()\n            .then(result => setUsers(result))\n    },[])\n\n    return (\n        //если пользователи не загружены => сообщение об ошибке, контент страницы не загружается\n        users.length > 0\n            //Switch для общего управления приложением\n            ? <Switch>\n                {/*\n                    проверка выполняется последовательно, при соответсвии одного условия, проверка дальше не выполняется\n                    генерация контента страницы по адресу: \"{baseUrl}/users*\"\n                */}\n                <Redirect exact from=\"/users\" to={`/users/${selectedUserId}`} />\n                <Redirect exact from=\"/\" to={`/users/${selectedUserId}`} />\n                <Route from=\"/users\">\n                    <Header\n                        userList={users}\n                        selectedUserIndex={selectedUserIndex}\n                        onChangeUser={setSelectedUserIndex}\n                    />\n                    <ContentWrapper\n                        albumsList={albums}\n                        selectedUser={users[selectedUserIndex]}\n                    />\n                </Route>\n                <Redirect from=\"*\" to={`/users/${selectedUserId}`} />\n            </Switch>\n            : <div>Sorry, the page is temporarily unavailable :(</div>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App'\nimport { BrowserRouter } from \"react-router-dom\"\n\nReactDOM.render(\n  <React.StrictMode>\n      <BrowserRouter>\n          <App />\n      </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"contentWrapper_wrapper__1czQn\",\"content\":\"contentWrapper_content__2bpMx\",\"header\":\"contentWrapper_header__2w1Zr\",\"elements\":\"contentWrapper_elements__3__uF\"};"],"sourceRoot":""}